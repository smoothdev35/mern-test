{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hugopriet/MERN/aequicens-mvp/client/src/pages/Home/slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport gsap from \"gsap\";\nexport default function Slider() {\n  _s();\n\n  const slides = [{\n    id: \"1\",\n    value: \"Feature 1\"\n  }, {\n    id: \"2\",\n    value: \"Feature 2\"\n  }, {\n    id: \"3\",\n    value: \"Feature 3\"\n  }, {\n    id: \"4\",\n    value: \"Feature 4\"\n  }];\n  const boxRef = React.useRef();\n  React.useEffect(() => {\n    //Get width.\n    let baseWidth = boxRef.current.offsetWidth; //Position all items one after another (position:absolute in the css).\n\n    gsap.set(\".slider_slide\", {\n      x: i => i * baseWidth\n    }); //Get complete width with all slides out of screen.\n\n    let wrapWidth = (slides.length - 1) * baseWidth; //Animate all items and use modifiers to reset all items that reach the end (left) to the other end of the carousel (right) for the infinite looping.\n\n    let tl = gsap.timeline({\n      repeat: -1\n    }).pause();\n    setTimeout(() => {\n      tl.to(\".slider_slide\", {\n        duration: 6,\n        x: \"-=\" + (baseWidth + wrapWidth),\n        ease: \"none\",\n        modifiers: {\n          x: gsap.utils.unitize(gsap.utils.wrap(-baseWidth, wrapWidth))\n        }\n      }).play(); //Following statements add several pauses to the timeline so the individual items stay in screen for 1 second before resuming the animation.\n\n      tl.addPause(1.5, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n      tl.addPause(3, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n      tl.addPause(4.5, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n      tl.addPause(6, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    id: \"slider\",\n    ref: boxRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider_slide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider_slide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider_slide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider_slide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Slider, \"OEdoRTW0ftzTzCoByg4W1KCWfBg=\");\n\n_c = Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/hugopriet/MERN/aequicens-mvp/client/src/pages/Home/slider.js"],"names":["React","useEffect","gsap","Slider","slides","id","value","boxRef","useRef","baseWidth","current","offsetWidth","set","x","i","wrapWidth","length","tl","timeline","repeat","pause","setTimeout","to","duration","ease","modifiers","utils","unitize","wrap","play","addPause"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport gsap from \"gsap\";\n\nexport default function Slider() {\n  const slides = [\n    {\n      id: \"1\",\n      value: \"Feature 1\",\n    },\n    {\n      id: \"2\",\n      value: \"Feature 2\",\n    },\n    {\n      id: \"3\",\n      value: \"Feature 3\",\n    },\n    {\n      id: \"4\",\n      value: \"Feature 4\",\n    },\n  ];\n  const boxRef = React.useRef();\n  React.useEffect(() => {\n    //Get width.\n    let baseWidth = boxRef.current.offsetWidth;\n    //Position all items one after another (position:absolute in the css).\n    gsap.set(\".slider_slide\", { x: (i) => i * baseWidth });\n    //Get complete width with all slides out of screen.\n    let wrapWidth = (slides.length - 1) * baseWidth;\n    //Animate all items and use modifiers to reset all items that reach the end (left) to the other end of the carousel (right) for the infinite looping.\n    let tl = gsap.timeline({ repeat: -1 }).pause();\n    setTimeout(() => {\n      tl.to(\".slider_slide\", {\n        duration: 6,\n        x: \"-=\" + (baseWidth + wrapWidth),\n        ease: \"none\",\n        modifiers: {\n          x: gsap.utils.unitize(gsap.utils.wrap(-baseWidth, wrapWidth)),\n        },\n      }).play();\n\n      //Following statements add several pauses to the timeline so the individual items stay in screen for 1 second before resuming the animation.\n      tl.addPause(1.5, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n\n      tl.addPause(3, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n\n      tl.addPause(4.5, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n\n      tl.addPause(6, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1500);\n      });\n    }, 2000);\n  }, []);\n  return (\n    <article id=\"slider\" ref={boxRef}>\n      <div className=\"slider_slide\"></div>\n      <div className=\"slider_slide\"></div>\n      <div className=\"slider_slide\"></div>\n      <div className=\"slider_slide\"></div>\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}