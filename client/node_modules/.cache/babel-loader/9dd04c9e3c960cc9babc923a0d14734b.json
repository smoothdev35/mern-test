{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hugopriet/MERN/aequicens-mvp/client/src/pages/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\nimport gsap from 'gsap';\nimport Header from './header';\nimport '../../styles/App.css';\nimport '../../styles/Home/home.css';\nexport default function Home({\n  history\n}) {\n  _s();\n\n  const slides = [{\n    id: '1',\n    value: \"Feature 1\"\n  }, {\n    id: '2',\n    value: \"Feature 2\"\n  }, {\n    id: '3',\n    value: \"Feature 3\"\n  }, {\n    id: '4',\n    value: \"Feature 4\"\n  }];\n  const boxRef = React.useRef();\n  React.useEffect(() => {\n    //Get width.\n    let baseWidth = boxRef.current.offsetWidth; //Position all items one after another (position:absolute in the css).\n\n    gsap.set(\".slider_slide\", {\n      x: i => i * baseWidth\n    }); //Get complete width with all slides out of screen.\n\n    let wrapWidth = (slides.length - 1) * baseWidth; //Animate all items and use modifiers to reset all items that reach the end (left) to the other end of the carousel (right) for the infinite looping.\n\n    let tl = gsap.timeline({\n      repeat: -1\n    }).pause();\n    setTimeout(() => {\n      tl.to(\".slider_slide\", {\n        duration: 6,\n        x: \"-=\" + (baseWidth + wrapWidth),\n        ease: \"none\",\n        modifiers: {\n          x: gsap.utils.unitize(gsap.utils.wrap(-baseWidth, wrapWidth))\n        }\n      }).play(); //Following statements add several pauses to the timeline so the individual items stay in screen for 1 second before resuming the animation.\n\n      tl.addPause(1, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n      tl.addPause(2, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n      tl.addPause(3, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n      tl.addPause(4, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n      tl.addPause(5, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n      tl.addPause(6, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"box full\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"box section\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          id: \"slider\",\n          ref: boxRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider_slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider_slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider_slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider_slide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"OEdoRTW0ftzTzCoByg4W1KCWfBg=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/hugopriet/MERN/aequicens-mvp/client/src/pages/Home/index.js"],"names":["React","useState","useEffect","api","gsap","Header","Home","history","slides","id","value","boxRef","useRef","baseWidth","current","offsetWidth","set","x","i","wrapWidth","length","tl","timeline","repeat","pause","setTimeout","to","duration","ease","modifiers","utils","unitize","wrap","play","addPause"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\nimport gsap from 'gsap';\nimport Header from './header';\nimport '../../styles/App.css';\nimport '../../styles/Home/home.css';\n\nexport default function Home({ history }) {\n\n  \n  const slides = [\n    {\n      id: '1',\n      value: \"Feature 1\"\n    },\n    {\n      id: '2',\n      value: \"Feature 2\"\n    },\n    {\n      id: '3',\n      value: \"Feature 3\"\n    },\n    {\n      id: '4',\n      value: \"Feature 4\"\n    }\n  ];\n  const boxRef = React.useRef();\n\n  React.useEffect(() => {\n    //Get width.\n    let baseWidth = boxRef.current.offsetWidth;\n    //Position all items one after another (position:absolute in the css).\n    gsap.set(\".slider_slide\", { x: (i) => i * baseWidth });\n    //Get complete width with all slides out of screen.\n    let wrapWidth = (slides.length - 1) * baseWidth;\n    //Animate all items and use modifiers to reset all items that reach the end (left) to the other end of the carousel (right) for the infinite looping.\n    let tl = gsap.timeline({ repeat: -1 }).pause();\n    setTimeout(() => {\n      tl.to(\".slider_slide\", {\n        duration: 6,\n        x: \"-=\" + (baseWidth + wrapWidth),\n        ease: \"none\",\n        modifiers: {\n          x: gsap.utils.unitize(gsap.utils.wrap(-baseWidth, wrapWidth))\n        }\n      }).play();\n\n      //Following statements add several pauses to the timeline so the individual items stay in screen for 1 second before resuming the animation.\n      tl.addPause(1, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n\n      tl.addPause(2, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n\n      tl.addPause(3, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n\n      tl.addPause(4, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n\n      tl.addPause(5, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n\n      tl.addPause(6, () => {\n        setTimeout(() => {\n          tl.play();\n        }, 1000);\n      });\n    }, 2000);\n  }, []);\n  \n    return (\n      <>\n      <Header />\n      <article className=\"box full\">\n        <main className='box section'>\n          <article id='slider' ref={boxRef}>\n            <div className='slider_slide'></div>\n            <div className='slider_slide'></div>\n            <div className='slider_slide'></div>\n            <div className='slider_slide'></div>\n          </article>\n        </main>\n      </article>\n      </>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}